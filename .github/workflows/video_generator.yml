name: 即创视频生成 (Jichuang Video Generation)

# 当收到一个类型为 'generate-video' 的 repository_dispatch 事件时触发
on:
  repository_dispatch:
    types: [generate-video]

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    
    # 定义 job 的输出
    outputs:
      task_name: ${{ steps.run_script.outputs.task_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install playwright openai

      - name: Install Playwright Browsers
        # --with-deps 会安装所有必需的操作系统依赖
        run: playwright install --with-deps

      - name: Create cookie file from secret
        env:
          # 从 GitHub Secrets 中读取 Base64 编码的 cookie
          JICHUANG_COOKIES_B64: ${{ secrets.JICHUANG_COOKIES_B64 }}
        run: |
          if [ -z "$JICHUANG_COOKIES_B64" ]; then
            echo "::error::Secret JICHUANG_COOKIES_B64 is not set."
            exit 1
          fi
          echo "$JICHUANG_COOKIES_B64" | base64 --decode > 即创.json
          echo "即创.json file created successfully."

      - name: Run Python script
        id: run_script
        env:
          # 将 ModelScope 密钥和 API 请求中的自定义文本作为环境变量传递给脚本
          MODELSCOPE_API_KEY: ${{ secrets.MODELSCOPE_API_KEY }}
          CUSTOM_TEXT: ${{ github.event.client_payload.text }}
          # GITHUB_OUTPUT 是一个特殊的文件路径，用于设置步骤的输出
          GITHUB_OUTPUT: ${{ steps.run_script.outputs.task_name }}
        run: python run_automation.py

      - name: Upload artifacts
        # 无论成功或失败，都上传截图以便调试
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generation-artifacts
          path: |
            *.png
            即创.json
